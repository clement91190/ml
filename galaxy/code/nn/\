import cPickle

filters = {
        'global' : range(37)}


def select(tx, ty, learn_type):
    """ select a subset of the labels to learn only some of them ..."""
    return (tx, ty[:,filters[learn_type]])


def load_data():
    print '... loading data'
    #dataset = 'data/training_set_v1/training_no_rotation.pkl'
    dataset = 'data/training_set_v1/training_hog.pkl'
    # Load the dataset
    with open(dataset, 'rb') as f:
        train_set, valid_set, test_set = cPickle.load(f)
    print "... done "   
    return (train_set, valid_set, test_set)


def main():
    method = "method_gray"
    learn_type = "global"
    

    train, validate, test = load_data()
   # N, feats, n_out = 100, 10, 2
   # train = (rng.randn(N, feats), 0.5 * np.ones((N, n_out)))
   # validate = (rng.randn(N, feats), 0.5 * np.ones((N, n_out)))
   # test = (rng.randn(N, feats), 0.5 * np.ones((N, n_out)))
    D = (train, validate, test)
    trainer = NNTrainer(D, n_train_batches=50)
    trainer.train_loop()
    #print trainer.predict(D[0])
    print trainer.neural_net.params

if __name__ == "__main__":
    main()

